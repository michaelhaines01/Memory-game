{"version":3,"sources":["components/Scoreboard.js","img/Coins/DEC.webp","img/Coins/BAT.webp","img/Coins/ADA.webp","img/Coins/ENJ.webp","components/data.js","img/Coins/ETH.webp","img/Coins/RUNE.webp","components/cards.js","components/gameover.js","components/start.js","App.js","index.js"],"names":["Scoreboard","props","score","className","high","Data","card","id","img","DECimg","BATimg","ENJimg","ADAimg","HandleCards","useState","selectedcards","setselected","Props","useEffect","i","length","j","Math","floor","random","shuffle","map","onClick","indexOf","concat","increasescore","checkhigh","reset","selectcard","height","src","Gameover","toggledisplay","Start","App","setscore","sethigh","displaybool","setdisplay","gameover","setgameover","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAaeA,EAXI,SAACC,GAClB,IAAMC,EAAQD,EAEd,OACE,sBAAKE,UAAU,aAAf,UACE,wCAAWD,EAAMA,SACjB,6CAAgBA,EAAME,YCRb,MAA0B,iCCA1B,MAA0B,iCCA1B,MAA0B,iCCA1B,MAA0B,iCCkB1BC,EATF,CACX,CAAEC,KAAM,MAAOC,GAAI,EAAGC,IAAKC,GAC3B,CAAEH,KAAM,MAAOC,GAAI,EAAGC,ICXT,IAA0B,kCDYvC,CAAEF,KAAM,MAAOC,GAAI,EAAGC,IAAKE,GAC3B,CAAEJ,KAAM,MAAOC,GAAI,EAAGC,IAAKG,GAC3B,CAAEL,KAAM,OAAQC,GAAI,EAAGC,IEdV,IAA0B,mCFevC,CAAEF,KAAM,MAAOC,GAAI,EAAGC,IAAKI,IGgCdC,EA5CK,SAACZ,GAAW,IAAD,EACQa,mBAAS,IADjB,mBACtBC,EADsB,KACPC,EADO,KAEvBC,EAAQhB,EAwBd,OAJAiB,qBAAU,YARM,WAEd,IAAK,IAAIC,EAAId,EAAKe,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACxC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADF,EAEnB,CAACd,EAAKgB,GAAIhB,EAAKc,IAAnCd,EAAKc,GAFkC,KAE9Bd,EAAKgB,GAFyB,MAO1CI,KACC,CAACV,IAGF,qBAAKZ,UAAU,YAAf,SACGE,EAAKqB,KAAI,SAACpB,GAAD,OACR,qBAAKH,UAAU,OAAf,SACE,qBAAKA,UAAU,WAAf,SACE,qBACEwB,QAAS,YA7BF,SAACrB,IACmB,IAAjCS,EAAca,QAAQtB,IACxBU,EAAYD,EAAcc,OAAOvB,IACjCW,EAAMa,kBAENb,EAAMc,YACNf,EAAY,IACZC,EAAMe,SAuBIC,CAAW3B,IAEb4B,OAAO,MACPC,IAAK7B,EAAKE,SAPWF,EAAKC,UChBzB6B,EAdE,SAACnC,GAChB,IAAMgB,EAAQhB,EAEd,OACE,qBAAKE,UAAU,WAAf,SACE,sBAAKA,UAAU,cAAf,UACE,0CACA,wCAAWc,EAAMf,MAAjB,OACA,wBAAQyB,QAAS,kBAAMV,EAAMoB,iBAA7B,4BCOOC,EAdD,SAACrC,GACb,IAAMgB,EAAQhB,EAEd,OACE,qBAAKE,UAAU,WAAf,SACE,sBAAKA,UAAU,cAAf,UACE,8BACE,qFAEF,wBAAQwB,QAAS,kBAAMV,EAAMoB,iBAA7B,+BCyCOE,EA9CH,WAAO,IAAD,EACUzB,mBAAS,GADnB,mBACTZ,EADS,KACFsC,EADE,OAEQ1B,mBAAS,GAFjB,mBAETV,EAFS,KAEHqC,EAFG,OAGkB3B,oBAAS,GAH3B,mBAGT4B,EAHS,KAGIC,EAHJ,OAIgB7B,oBAAS,GAJzB,mBAIT8B,EAJS,KAICC,EAJD,KAaVR,EAAgB,WACpBG,EAAS,GACTG,GAAW,GACXE,GAAY,IAQd,OACE,sBAAK1C,UAAU,iBAAf,UACE,mCACE,oBAAIA,UAAU,QAAd,yBACA,cAAC,EAAD,CAAYD,MAAOA,EAAOE,KAAMA,QAGhCsC,IAAgBE,GAAY,cAAC,EAAD,CAAOP,cAAeA,IACnDO,GAAY,cAAC,EAAD,CAAUP,cAAeA,EAAenC,MAAOA,IAE3DwC,GACC,cAAC,EAAD,CACEX,UAlBU,WACZ7B,GAASE,GACXqC,EAAQvC,IAiBJsC,SAAUA,EACVR,MAhCM,WACZa,GAAY,GACZF,GAAW,IA+BLb,cA7Bc,WACpBU,EAAStC,EAAQ,UCdrB4C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,qBAAK7C,UAAU,MAAf,SACE,cAAC,EAAD,QAGJ8C,SAASC,eAAe,U","file":"static/js/main.1d7144f6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Scoreboard = (props) => {\r\n  const score = props;\r\n\r\n  return (\r\n    <div className=\"scoreboard\">\r\n      <h3>Score {score.score}</h3>\r\n      <h3>High score {score.high}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scoreboard;\r\n","export default __webpack_public_path__ + \"static/media/DEC.44e07f7f.webp\";","export default __webpack_public_path__ + \"static/media/BAT.49d40c3c.webp\";","export default __webpack_public_path__ + \"static/media/ADA.52164601.webp\";","export default __webpack_public_path__ + \"static/media/ENJ.6346ab2e.webp\";","import {\r\n  DECimg,\r\n  ETHimg,\r\n  BATimg,\r\n  ENJimg,\r\n  RUNEimg,\r\n  ADAimg,\r\n} from \"../img/index.js\";\r\n\r\nconst Data = [\r\n  { card: \"DEC\", id: 0, img: DECimg },\r\n  { card: \"ETH\", id: 1, img: ETHimg },\r\n  { card: \"BAT\", id: 2, img: BATimg },\r\n  { card: \"ENJ\", id: 3, img: ENJimg },\r\n  { card: \"RUNE\", id: 4, img: RUNEimg },\r\n  { card: \"ADA\", id: 5, img: ADAimg },\r\n];\r\n\r\nexport default Data;\r\n","export default __webpack_public_path__ + \"static/media/ETH.2c67966e.webp\";","export default __webpack_public_path__ + \"static/media/RUNE.36f66d9e.webp\";","import React, { useState, useEffect } from \"react\";\r\nimport Data from \"./data.js\";\r\n\r\nconst HandleCards = (props) => {\r\n  const [selectedcards, setselected] = useState([]);\r\n  const Props = props;\r\n  const selectcard = (card) => {\r\n    if (selectedcards.indexOf(card) === -1) {\r\n      setselected(selectedcards.concat(card));\r\n      Props.increasescore();\r\n    } else {\r\n      Props.checkhigh();\r\n      setselected([]);\r\n      Props.reset();\r\n    }\r\n  };\r\n\r\n  const shuffle = () => {\r\n    //Dursten shuffle\r\n    for (let i = Data.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [Data[i], Data[j]] = [Data[j], Data[i]];\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    shuffle();\r\n  }, [selectedcards]);\r\n\r\n  return (\r\n    <div className=\"card-grid\">\r\n      {Data.map((card) => (\r\n        <div className=\"card\" key={card.id}>\r\n          <div className=\"img-grid\">\r\n            <img\r\n              onClick={() => {\r\n                selectcard(card);\r\n              }}\r\n              height=\"180\"\r\n              src={card.img}\r\n            ></img>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default HandleCards;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nconst Gameover = (props) => {\r\n  const Props = props;\r\n\r\n  return (\r\n    <div className=\"img-grid\">\r\n      <div className=\"messagecard\">\r\n        <h2>Gameover</h2>\r\n        <h2>Score {Props.score} </h2>\r\n        <button onClick={() => Props.toggledisplay()}> Restart</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gameover;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nconst Start = (props) => {\r\n  const Props = props;\r\n\r\n  return (\r\n    <div className=\"img-grid\">\r\n      <div className=\"messagecard\">\r\n        <div>\r\n          <h4>Test your memory dont select the same coin twice.</h4>\r\n        </div>\r\n        <button onClick={() => Props.toggledisplay()}> Start Game</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Start;\r\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Scoreboard from \"./components/Scoreboard.js\";\nimport HandleCards from \"./components/cards.js\";\n\nimport Gameover from \"./components/gameover.js\";\nimport Start from \"./components/start.js\";\nconst App = () => {\n  const [score, setscore] = useState(0);\n  const [high, sethigh] = useState(0);\n  const [displaybool, setdisplay] = useState(false);\n  const [gameover, setgameover] = useState(false);\n\n  const reset = () => {\n    setgameover(true);\n    setdisplay(false);\n  };\n  const increasescore = () => {\n    setscore(score + 1);\n  };\n  const toggledisplay = () => {\n    setscore(0);\n    setdisplay(true);\n    setgameover(false);\n  };\n  const checkhigh = () => {\n    if (score >= high) {\n      sethigh(score);\n    }\n  };\n\n  return (\n    <div className=\"game-container\">\n      <header>\n        <h1 className=\"title\">Memory Game</h1>\n        <Scoreboard score={score} high={high} />\n      </header>\n\n      {!displaybool && !gameover && <Start toggledisplay={toggledisplay} />}\n      {gameover && <Gameover toggledisplay={toggledisplay} score={score} />}\n\n      {displaybool && (\n        <HandleCards\n          checkhigh={checkhigh}\n          setscore={setscore}\n          reset={reset}\n          increasescore={increasescore}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"app\">\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}